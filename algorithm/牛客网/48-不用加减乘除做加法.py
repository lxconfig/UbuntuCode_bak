

"""
    写一个函数，求两个整数之和，要求在函数体内不得使用+、-、*、/四则运算符号。

    思路: 
        计算十进制的加法时，分三步: 如 5 + 7
            (1) 先不管进位，计算 5 + 7 = 2
            (2) 计算进位值，得到 10，如果进位值为0，直接返回第一步的结果
            (3) 重复前两步，但是相加的值变成 2 + 10。最终返回12
        
        二进制的加法也可以分三步: 如 10 + 11
            (1) 先不管进位，计算 10 + 11 即: 1010 ^ 1011 = 0001，这里每位相加就是异或操作^
            (2) 计算进位值，得到 10100，这里得到进位值就是 按位与，再左移1位，若进位值为0，则第一步的操作就是最终结果
            (3) 重复前两步:
                不考虑进位，计算 00001 ^ 10100 = 10101
                计算进位值，00001 & 10100 = 00000
                直接返回 10101 即为结果
            所以: 10 + 11 = 10101 = 21
"""


class Solution:
    def Add(self, num1, num2):
        # 运行时间：24ms  占用内存：5852k
        if num2 == 0:
            return num1
        while num2 != 0:
            tmp = (num1 ^ num2) & 0xFFFFFFFF   # 全部变为正数
            carry = ((num1 & num2) << 1)
            num1 = tmp
            num2 = carry
        if num1 <= 0x7FFFFFFF:
            tmp = num1
        else:
            # 当结果是负数时，变回负数结果
            # 负数 + 补码 = 模（2**32）
            tmp = tmp - 0x100000000
        return tmp


if __name__ == "__main__":
    solution = Solution()
    print(solution.Add(1, -2))